{"ast":null,"code":"var _jsxFileName = \"/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\n// import { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CitySelection = () => {\n  _s();\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n  const [getData, setGetData] = useState(\"\");\n  const manisha = {\n    cops: [{\n      name: \"Cop 1\",\n      city: cop1City,\n      vehicle: cop1Vehicle\n    }, {\n      name: \"Cop 2\",\n      city: cop2City,\n      vehicle: cop2Vehicle\n    }, {\n      name: \"Cop 3\",\n      city: cop3City,\n      vehicle: cop3Vehicle\n    }]\n  };\n  const cities = [{\n    name: \"Yapkashnagar\",\n    distance: 60\n  }, {\n    name: \"Lihaspur\",\n    distance: 50\n  }, {\n    name: \"Narmis City\",\n    distance: 40\n  }, {\n    name: \"Shekharvati\",\n    distance: 30\n  }, {\n    name: \"Nuravgram\",\n    distance: 20\n  }];\n  const vehicles = [{\n    kind: \"EV Bike\",\n    range: 60,\n    count: 2\n  }, {\n    kind: \"EV Car\",\n    range: 100,\n    count: 1\n  }, {\n    kind: \"EV SUV\",\n    range: 120,\n    count: 1\n  }];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(city => city.name !== cop2City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop2City);\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n  function getVehicleForCop1() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle);\n  }\n  const handleCop1VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n  const handleStart = async () => {\n    try {\n      var _axios;\n      const response = await ((_axios = axios) === null || _axios === void 0 ? void 0 : _axios.post(`http://127.0.0.1:3001/search`, manisha));\n      console.log({\n        response\n      });\n      if (response.status === 200) {\n        setGetData({\n          type: GET_DATA,\n          payload: response.data.result\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1City,\n        onChange: handleCop1CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), getCitiesForCop1().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2City,\n        onChange: handleCop2CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), getCitiesForCop2().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3City,\n        onChange: handleCop3CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), getCitiesForCop3().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1Vehicle,\n        onChange: handleCop1VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), getVehicleForCop1().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2Vehicle,\n        onChange: handleCop2VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), getVehicleForCop2().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3Vehicle,\n        onChange: handleCop3VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), getVehicleForCop3().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to GamePlay!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStart(),\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelection, \"C+BONXg3SXAFLkv6wxZbKemoJ3M=\");\n_c = CitySelection;\nexport default CitySelection;\nvar _c;\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CitySelection","_s","cop1City","setCop1City","cop2City","setCop2City","cop3City","setCop3City","cop1Vehicle","setCop1Vehicle","cop2Vehicle","setCop2Vehicle","cop3Vehicle","setCop3Vehicle","getData","setGetData","manisha","cops","name","city","vehicle","cities","distance","vehicles","kind","range","count","getCitiesForCop1","filter","getCitiesForCop2","getCitiesForCop3","handleCop1CitySelection","e","selectedCity","target","value","handleCop2CitySelection","handleCop3CitySelection","getVehicleForCop1","getVehicleForCop2","getVehicleForCop3","handleCop1VehicleSelection","selectedVehicle","handleCop2VehicleSelection","handleCop3VehicleSelection","handleStart","_axios","response","axios","post","console","log","status","type","GET_DATA","payload","data","result","error","children","action","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","onClick","_c","$RefreshReg$"],"sources":["/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\n// import { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\n\nexport const CitySelection = () => {\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n\n  const [getData, setGetData] = useState(\"\");\n\n  const manisha = {\n    cops: [\n      {\n        name: \"Cop 1\",\n        city: cop1City,\n        vehicle: cop1Vehicle,\n      },\n      {\n        name: \"Cop 2\",\n        city: cop2City,\n        vehicle: cop2Vehicle,\n      },\n      {\n        name: \"Cop 3\",\n        city: cop3City,\n        vehicle: cop3Vehicle,\n      },\n    ],\n  };\n\n  const cities = [\n    { name: \"Yapkashnagar\", distance: 60 },\n    { name: \"Lihaspur\", distance: 50 },\n    { name: \"Narmis City\", distance: 40 },\n    { name: \"Shekharvati\", distance: 30 },\n    { name: \"Nuravgram\", distance: 20 },\n  ];\n\n  const vehicles = [\n    { kind: \"EV Bike\", range: 60, count: 2 },\n    { kind: \"EV Car\", range: 100, count: 1 },\n    { kind: \"EV SUV\", range: 120, count: 1 },\n  ];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(\n      (city) => city.name !== cop2City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop2City\n    );\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n\n  function getVehicleForCop1() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle\n    );\n  }\n\n  const handleCop1VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n\n  const handleStart = async () => {\n    try {\n      const response = await axios?.post(\n        `http://127.0.0.1:3001/search`,\n        manisha\n      );\n      console.log({ response });\n      if (response.status === 200) {\n        setGetData({ type: GET_DATA, payload: response.data.result });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <form action=\"\">\n        <h2>City Selection for Cop 1</h2>\n        <select value={cop1City} onChange={handleCop1CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop1().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 2</h2>\n        <select value={cop2City} onChange={handleCop2CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop2().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 3</h2>\n        <select value={cop3City} onChange={handleCop3CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop3().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n\n        <h2>Vehicle Selection for Cop 1</h2>\n\n        <select value={cop1Vehicle} onChange={handleCop1VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop1().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n\n        <h2>Vehicle Selection for Cop 2</h2>\n        <select value={cop2Vehicle} onChange={handleCop2VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop2().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n        <h2>Vehicle Selection for Cop 3</h2>\n        <select value={cop3Vehicle} onChange={handleCop3VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop3().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n        <div>\n          <h1>Welcome to GamePlay!</h1>\n          <button onClick={() => handleStart()}>Start</button>\n        </div>\n        {/* <button type=\"submit\">Capture</button> */}\n        {/* <StartPage /> */}\n      </form>\n    </div>\n  );\n};\n\nexport default CitySelection;\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}