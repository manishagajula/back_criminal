{"ast":null,"code":"var _jsxFileName = \"/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CitySelection = () => {\n  _s();\n  const cities = [{\n    name: \"Yapkashnagar\",\n    distance: 60\n  }, {\n    name: \"Lihaspur\",\n    distance: 50\n  }, {\n    name: \"Narmis City\",\n    distance: 40\n  }, {\n    name: \"Shekharvati\",\n    distance: 30\n  }, {\n    name: \"Nuravgram\",\n    distance: 20\n  }];\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n\n  // Define available city options based on the selected cities\n  // const availableCitiesCop1 = getCitiesForCop1();\n  // const availableCitiesCop2 = getCitiesForCop2();\n  // const availableCitiesCop3 = getCitiesForCop3();\n\n  function getCitiesForCop1() {\n    return cities.filter(city => city.name !== cop2City && city.name !== cop3City);\n  }\n  function getCitiesForCop2() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop3City);\n  }\n  function getCitiesForCop3() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop2City);\n  }\n  const handleCop1CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1City,\n        onChange: e => handleCop1CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), getCitiesForCop1().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2City,\n        onChange: e => handleCop2CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), getCitiesForCop2().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3City,\n        onChange: e => handleCop3CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), getCitiesForCop3().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelection, \"ikHAgsFU8PN++/hVg4vVvog0R1k=\");\n_c = CitySelection;\nvar _c;\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CitySelection","_s","cities","name","distance","cop1City","setCop1City","cop2City","setCop2City","cop3City","setCop3City","getCitiesForCop1","filter","city","getCitiesForCop2","getCitiesForCop3","handleCop1CitySelection","e","selectedCity","target","value","handleCop2CitySelection","handleCop3CitySelection","children","action","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","type","_c","$RefreshReg$"],"sources":["/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\n\nexport const CitySelection = () => {\n  const cities = [\n    { name: \"Yapkashnagar\", distance: 60 },\n    { name: \"Lihaspur\", distance: 50 },\n    { name: \"Narmis City\", distance: 40 },\n    { name: \"Shekharvati\", distance: 30 },\n    { name: \"Nuravgram\", distance: 20 },\n  ];\n\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n\n  // Define available city options based on the selected cities\n  // const availableCitiesCop1 = getCitiesForCop1();\n  // const availableCitiesCop2 = getCitiesForCop2();\n  // const availableCitiesCop3 = getCitiesForCop3();\n\n  function getCitiesForCop1() {\n    return cities.filter(\n      (city) => city.name !== cop2City && city.name !== cop3City\n    );\n  }\n\n  function getCitiesForCop2() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop3City\n    );\n  }\n\n  function getCitiesForCop3() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop2City\n    );\n  }\n\n  const handleCop1CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n\n  return (\n    <div>\n      <form action=\"\">\n        <h2>City Selection for Cop 1</h2>\n\n        <select value={cop1City} onChange={(e) => handleCop1CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop1().map((city) => (\n            <option key={city} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n\n        <h2>City Selection for Cop 2</h2>\n        <select value={cop2City} onChange={(e) => handleCop2CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop2().map((city) => (\n            <option key={city} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n\n        <h2>City Selection for Cop 3</h2>\n        <select value={cop3City} onChange={(e) => handleCop3CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop3().map((city) => (\n            <option key={city} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Capture</button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACtC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACrC;IAAED,IAAI,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACrC;IAAED,IAAI,EAAE,WAAW;IAAEC,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}