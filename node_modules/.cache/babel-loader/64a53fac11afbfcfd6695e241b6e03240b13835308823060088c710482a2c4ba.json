{"ast":null,"code":"var _jsxFileName = \"/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState, useReducer } from \"react\";\nimport { dataConstants } from \"../constants/data_constants\";\nimport { dataReducer, initialData } from \"../reducer/data_reducer\";\nimport axios from \"axios\";\n\n// import { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CitySelection = () => {\n  _s();\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n  const [getData, setGetData] = useReducer(dataReducer, initialData);\n  const {\n    GET_DATA\n  } = dataConstants;\n  const payload = {\n    cops: [{\n      name: \"Cop 1\",\n      city: cop1City,\n      vehicle: cop1Vehicle\n    }, {\n      name: \"Cop 2\",\n      city: cop2City,\n      vehicle: cop2Vehicle\n    }, {\n      name: \"Cop 3\",\n      city: cop3City,\n      vehicle: cop3Vehicle\n    }]\n  };\n  const cities = [{\n    name: \"Yapkashnagar\",\n    distance: 60,\n    imageURL: \"https://images.unsplash.com/photo-1601042879364-f3947d3f9c16?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  }, {\n    name: \"Lihaspur\",\n    distance: 50,\n    imageURL: \"https://images.unsplash.com/photo-1673265736033-63d8140e9a99?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  }, {\n    name: \"Narmis City\",\n    distance: 40,\n    imageURL: \"https://images.unsplash.com/photo-1603842365619-ee78b8eaec60?q=80&w=2268&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  }, {\n    name: \"Shekharvati\",\n    distance: 30,\n    imageURL: \"https://images.unsplash.com/photo-1575032872568-cbda501dea3a?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  }, {\n    name: \"Nuravgram\",\n    distance: 20\n  }];\n  const vehicles = [{\n    kind: \"EV Bike\",\n    range: 60,\n    count: 2\n  }, {\n    kind: \"EV Car\",\n    range: 100,\n    count: 1\n  }, {\n    kind: \"EV SUV\",\n    range: 120,\n    count: 1\n  }];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(city => city.name !== cop2City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop2City);\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n  function getVehicleForCop1() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle);\n  }\n  const handleCop1VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n  const handleStart = async () => {\n    try {\n      const response = await (axios === null || axios === void 0 ? void 0 : axios.post(`http://127.0.0.1:3001/search`, payload));\n      console.log({\n        response\n      });\n      if (response.status === 200) {\n        setGetData({\n          type: GET_DATA,\n          payload: response.data.result\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log({\n    getData\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1City,\n        onChange: handleCop1CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), getCitiesForCop1().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2City,\n        onChange: handleCop2CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), getCitiesForCop2().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: [city.name, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: city.image,\n            alt: \"cityphoto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, city.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3City,\n        onChange: handleCop3CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), getCitiesForCop3().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1Vehicle,\n        onChange: handleCop1VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), getVehicleForCop1().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2Vehicle,\n        onChange: handleCop2VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), getVehicleForCop2().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vehicle Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3Vehicle,\n        onChange: handleCop3VehicleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vehicle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), getVehicleForCop3().map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vehicle.kind,\n          children: vehicle.kind\n        }, vehicle.kind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to GamePlay!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            handleStart();\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getData.finalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n\n// export default CitySelection;\n_s(CitySelection, \"reU4IdLLq0tVrjCHUuIRc+NT0dM=\");\n_c = CitySelection;\nvar _c;\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"names":["React","useState","useReducer","dataConstants","dataReducer","initialData","axios","jsxDEV","_jsxDEV","CitySelection","_s","cop1City","setCop1City","cop2City","setCop2City","cop3City","setCop3City","cop1Vehicle","setCop1Vehicle","cop2Vehicle","setCop2Vehicle","cop3Vehicle","setCop3Vehicle","getData","setGetData","GET_DATA","payload","cops","name","city","vehicle","cities","distance","imageURL","vehicles","kind","range","count","getCitiesForCop1","filter","getCitiesForCop2","getCitiesForCop3","handleCop1CitySelection","e","selectedCity","target","value","handleCop2CitySelection","handleCop3CitySelection","getVehicleForCop1","getVehicleForCop2","getVehicleForCop3","handleCop1VehicleSelection","selectedVehicle","handleCop2VehicleSelection","handleCop3VehicleSelection","handleStart","response","post","console","log","status","type","data","result","error","children","action","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","src","image","alt","onClick","preventDefault","finalData","_c","$RefreshReg$"],"sources":["/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState, useReducer } from \"react\";\nimport { dataConstants } from \"../constants/data_constants\";\nimport { dataReducer, initialData } from \"../reducer/data_reducer\";\nimport axios from \"axios\";\n\n// import { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\n\nexport const CitySelection = () => {\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n\n  const [getData, setGetData] = useReducer(dataReducer, initialData);\n  const { GET_DATA } = dataConstants;\n\n  const payload = {\n    cops: [\n      {\n        name: \"Cop 1\",\n        city: cop1City,\n        vehicle: cop1Vehicle,\n      },\n      {\n        name: \"Cop 2\",\n        city: cop2City,\n        vehicle: cop2Vehicle,\n      },\n      {\n        name: \"Cop 3\",\n        city: cop3City,\n        vehicle: cop3Vehicle,\n      },\n    ],\n  };\n\n  const cities = [\n    {\n      name: \"Yapkashnagar\",\n      distance: 60,\n      imageURL:\n        \"https://images.unsplash.com/photo-1601042879364-f3947d3f9c16?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    },\n    {\n      name: \"Lihaspur\",\n      distance: 50,\n      imageURL:\n        \"https://images.unsplash.com/photo-1673265736033-63d8140e9a99?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    },\n    {\n      name: \"Narmis City\",\n      distance: 40,\n      imageURL:\n        \"https://images.unsplash.com/photo-1603842365619-ee78b8eaec60?q=80&w=2268&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    },\n    {\n      name: \"Shekharvati\",\n      distance: 30,\n      imageURL:\n        \"https://images.unsplash.com/photo-1575032872568-cbda501dea3a?q=80&w=2787&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    },\n    { name: \"Nuravgram\", distance: 20 },\n  ];\n\n  const vehicles = [\n    { kind: \"EV Bike\", range: 60, count: 2 },\n    { kind: \"EV Car\", range: 100, count: 1 },\n    { kind: \"EV SUV\", range: 120, count: 1 },\n  ];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(\n      (city) => city.name !== cop2City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop2City\n    );\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n\n  function getVehicleForCop1() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle\n    );\n  }\n\n  const handleCop1VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n\n  const handleStart = async () => {\n    try {\n      const response = await axios?.post(\n        `http://127.0.0.1:3001/search`,\n        payload\n      );\n      console.log({ response });\n      if (response.status === 200) {\n        setGetData({ type: GET_DATA, payload: response.data.result });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  console.log({ getData });\n  return (\n    <div>\n      <form action=\"\">\n        <h2>City Selection for Cop 1</h2>\n        <select value={cop1City} onChange={handleCop1CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop1().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 2</h2>\n        <select value={cop2City} onChange={handleCop2CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop2().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n              <img src={city.image} alt=\"cityphoto\" />\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 3</h2>\n        <select value={cop3City} onChange={handleCop3CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop3().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n\n        <h2>Vehicle Selection for Cop 1</h2>\n\n        <select value={cop1Vehicle} onChange={handleCop1VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop1().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n\n        <h2>Vehicle Selection for Cop 2</h2>\n        <select value={cop2Vehicle} onChange={handleCop2VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop2().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n        <h2>Vehicle Selection for Cop 3</h2>\n        <select value={cop3Vehicle} onChange={handleCop3VehicleSelection}>\n          <option value=\"\">Select Vehicle</option>\n          {getVehicleForCop3().map((vehicle) => (\n            <option key={vehicle.kind} value={vehicle.kind}>\n              {vehicle.kind}\n            </option>\n          ))}\n        </select>\n        <div>\n          <h1>Welcome to GamePlay!</h1>\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              handleStart();\n            }}\n          >\n            Start\n          </button>\n        </div>\n        {/* <button type=\"submit\">Capture</button> */}\n        {/* <StartPage /> */}\n      </form>\n      <div>{getData.finalData}</div>\n    </div>\n  );\n};\n\n// export default CitySelection;\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAClE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}