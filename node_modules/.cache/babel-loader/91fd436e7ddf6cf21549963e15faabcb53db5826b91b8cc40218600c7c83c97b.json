{"ast":null,"code":"var _jsxFileName = \"/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\nimport { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CitySelection = () => {\n  _s();\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n  const cities = [{\n    name: \"Yapkashnagar\",\n    distance: 60\n  }, {\n    name: \"Lihaspur\",\n    distance: 50\n  }, {\n    name: \"Narmis City\",\n    distance: 40\n  }, {\n    name: \"Shekharvati\",\n    distance: 30\n  }, {\n    name: \"Nuravgram\",\n    distance: 20\n  }];\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n  const vehicles = [{\n    kind: \"EV Bike\",\n    range: 60,\n    count: 2\n  }, {\n    kind: \"EV Car\",\n    range: 100,\n    count: 1\n  }, {\n    kind: \"EV SUV\",\n    range: 120,\n    count: 1\n  }];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(city => city.name !== cop2City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop3City);\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(city => city.name !== cop1City && city.name !== cop2City);\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = e => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n  function getVehicleForCop1() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle);\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(vehicle => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle);\n  }\n  const handleCop1VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = e => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop1City,\n        onChange: handleCop1CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), getCitiesForCop1().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop2City,\n        onChange: handleCop2CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), getCitiesForCop2().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"City Selection for Cop 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cop3City,\n        onChange: handleCop3CitySelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), getCitiesForCop3().map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VehicleSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelection, \"nUOB2T2G1Xpmt8VLrU83O9q97K0=\");\n_c = CitySelection;\nexport default CitySelection;\nvar _c;\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"names":["React","useState","VehicleSelection","jsxDEV","_jsxDEV","CitySelection","_s","cop1City","setCop1City","cop2City","setCop2City","cop3City","setCop3City","cities","name","distance","cop1Vehicle","setCop1Vehicle","cop2Vehicle","setCop2Vehicle","cop3Vehicle","setCop3Vehicle","vehicles","kind","range","count","getCitiesForCop1","filter","city","getCitiesForCop2","getCitiesForCop3","handleCop1CitySelection","e","selectedCity","target","value","handleCop2CitySelection","handleCop3CitySelection","getVehicleForCop1","vehicle","getVehicleForCop2","getVehicleForCop3","handleCop1VehicleSelection","selectedVehicle","handleCop2VehicleSelection","handleCop3VehicleSelection","children","action","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","_c","$RefreshReg$"],"sources":["/Users/manishagajula/projects/gameplay/src/components/CitySelection.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export const CitySelection = () => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCityChange = (e) => {\n//     setSelectedCity(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission, e.g., send selectedCity to backend\n//     console.log(\"Selected city:\", selectedCity);\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Select a city:\n//           <select value={selectedCity} onChange={handleCityChange}>\n//             <option value=\"\">Select</option>\n//             <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//             <option value=\"Lihaspur\">Lihaspur</option>\n//             <option value=\"Narmis City\">Narmis City</option>\n//             <option value=\"Shekharvati\">Shekharvati</option>\n//             <option value=\"Nuravgram\">Nuravgram</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       <p>Capture Status: {captureStatus}</p>\n//       {captureStatus === \"Captured\" && (\n//         <p>Capturing Cop's Name: {capturingCop}</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import ResultPage from \"./ResultPage\"; // Import the ResultPage component\n\n// export const CitySelection = ({ cop }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n//   const [capturingCop, setCapturingCop] = useState(\"\");\n//   const [captureStatus, setCaptureStatus] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate fugitive's location\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Select suitable electric vehicle based on distance\n//     const captureSuccess = distanceToTarget <= 120; // Assuming maximum range of EV SUV is 120 KM\n\n//     let captureStatus = captureSuccess ? \"Captured\" : \"Not captured\";\n\n//     setCaptureStatus(captureStatus);\n//     setCapturingCop(captureSuccess ? cop : \"\"); // Set capturing cop's name if capture was successful\n//   };\n\n//   return (\n//     <div>\n//       <h2>City Selection for Cop {cop}</h2>\n//       <select\n//         value={selectedCity}\n//         onChange={(e) => setSelectedCity(e.target.value)}\n//       >\n//         <option value=\"\">Select City</option>\n//         <option value=\"Yapkashnagar\">Yapkashnagar</option>\n//         <option value=\"Lihaspur\">Lihaspur</option>\n//         <option value=\"Narmis City\">Narmis City</option>\n//         <option value=\"Shekharvati\">Shekharvati</option>\n//         <option value=\"Nuravgram\">Nuravgram</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         value={capturingCop}\n//         placeholder=\"Capturing Cop's Name\"\n//         onChange={(e) => setCapturingCop(e.target.value)}\n//       />\n//       <button onClick={handleCitySelection}>Capture</button>\n//       {captureStatus && (\n//         <ResultPage captureStatus={captureStatus} capturingCop={capturingCop} />\n//       )}\n//     </div>\n//   );\n// };\n\n// import React, { useState } from \"react\";\n// import VehicleSelection from \"./VehicleSelection\";\n\n// export const CitySelection = ({ cop, onCapture }) => {\n//   const [selectedCity, setSelectedCity] = useState(\"\");\n\n//   const handleCitySelection = () => {\n//     // Simulate the location of the fugitive\n//     const fugitiveLocation = \"Nuravgram\";\n\n//     // City distances\n//     const cityDistances = {\n//       Yapkashnagar: 60,\n//       Lihaspur: 50,\n//       NarmisCity: 40,\n//       Shekharvati: 30,\n//       Nuravgram: 20,\n//     };\n\n//     // Determine distance between selected city and fugitive's location\n//     const distanceToTarget = cityDistances[selectedCity];\n//     // Simulate capture success if distance is less than or equal to 20 KM\n//     const captureSuccess = distanceToTarget <= 20;\n\n//     // Call the onCapture callback function with capture status and cop's name\n//     onCapture(captureSuccess ? cop : null);\n//   };\n\n//   const submitForm = () => {};\n\nimport React, { useState } from \"react\";\nimport { VehicleSelection } from \"./VehicleSelection\";\n// import { StartPage } from \"./StartPage\";\n\nexport const CitySelection = () => {\n  const [cop1City, setCop1City] = useState(\"\");\n  const [cop2City, setCop2City] = useState(\"\");\n  const [cop3City, setCop3City] = useState(\"\");\n\n  const cities = [\n    { name: \"Yapkashnagar\", distance: 60 },\n    { name: \"Lihaspur\", distance: 50 },\n    { name: \"Narmis City\", distance: 40 },\n    { name: \"Shekharvati\", distance: 30 },\n    { name: \"Nuravgram\", distance: 20 },\n  ];\n\n  const [cop1Vehicle, setCop1Vehicle] = useState(\"\");\n  const [cop2Vehicle, setCop2Vehicle] = useState(\"\");\n  const [cop3Vehicle, setCop3Vehicle] = useState(\"\");\n\n  const vehicles = [\n    { kind: \"EV Bike\", range: 60, count: 2 },\n    { kind: \"EV Car\", range: 100, count: 1 },\n    { kind: \"EV SUV\", range: 120, count: 1 },\n  ];\n\n  // Function to get available cities for Cop 1\n  function getCitiesForCop1() {\n    return cities.filter(\n      (city) => city.name !== cop2City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getCitiesForCop2() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop3City\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getCitiesForCop3() {\n    return cities.filter(\n      (city) => city.name !== cop1City && city.name !== cop2City\n    );\n  }\n\n  // Handler for Cop 1 city selection\n  const handleCop1CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop1City(selectedCity);\n  };\n\n  // Handler for Cop 2 city selection\n  const handleCop2CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop2City(selectedCity);\n  };\n\n  // Handler for Cop 3 city selection\n  const handleCop3CitySelection = (e) => {\n    const selectedCity = e.target.value;\n    setCop3City(selectedCity);\n  };\n\n  function getVehicleForCop1() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop2Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 2\n  function getVehicleForCop2() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop3Vehicle\n    );\n  }\n\n  // Function to get available cities for Cop 3\n  function getVehicleForCop3() {\n    return vehicles.filter(\n      (vehicle) => vehicle.kind !== cop1Vehicle && vehicle.kind !== cop2Vehicle\n    );\n  }\n\n  const handleCop1VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop1Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 2 vehicle selection\n  const handleCop2VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop2Vehicle(selectedVehicle);\n  };\n\n  // Handler for Cop 3 vehicle selection\n  const handleCop3VehicleSelection = (e) => {\n    const selectedVehicle = e.target.value;\n    setCop3Vehicle(selectedVehicle);\n  };\n\n  return (\n    <div>\n      <form action=\"\">\n        <h2>City Selection for Cop 1</h2>\n        <select value={cop1City} onChange={handleCop1CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop1().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 2</h2>\n        <select value={cop2City} onChange={handleCop2CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop2().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <h2>City Selection for Cop 3</h2>\n        <select value={cop3City} onChange={handleCop3CitySelection}>\n          <option value=\"\">Select City</option>\n          {getCitiesForCop3().map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n        <VehicleSelection />\n        {/* <button type=\"submit\">Capture</button> */}\n        {/* <StartPage /> */}\n      </form>\n    </div>\n  );\n};\n\nexport default CitySelection;\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,MAAM,GAAG,CACb;IAAEC,IAAI,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}